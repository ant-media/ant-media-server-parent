name:  Ant Media Server Parent Test

on:
  push:
    branches:
      - '**'
    tags:
      - 'ams-v*'
  pull_request:
    branches:
      - '**'
  
env:
  RUNNER: ubuntu-22.04      

jobs:
  run-test:
    runs-on: ubuntu-22.04
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: https://sonarcloud.io     
      CI_DEPLOY_USERNAME: ${{ secrets.CI_DEPLOY_USERNAME }}
      CI_DEPLOY_PASSWORD: ${{ secrets.CI_DEPLOY_PASSWORD }}
      GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
            
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'
          cache: 'maven'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - run: sudo apt-get update -qq
      - run: sudo apt-get install ffmpeg -qq -y

      - name: Build Ant Media Server Parent project
        run: |
          ls -alh
          mvn clean install -DskipTests -Dmaven.javadoc.skip=true -Dgpg.skip=true --quiet
          cd ..

  deploy:
    runs-on: ubuntu-22.04
    needs: run-test
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Get Maven project version
        id: get_version
        run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> "$GITHUB_OUTPUT"

      - name: Deploy Snapshot
        if: startsWith(github.ref, 'refs/heads/') && contains(steps.get_version.outputs.version, 'SNAPSHOT')
        run: mvn deploy -DskipTests --quiet --settings mvn-settings.xml
        env:
          GPG_TTY: ''

      - name: Deploy Release
        if: startsWith(github.ref, 'refs/tags/ams-v')
        run: mvn deploy -DskipTests --quiet --settings mvn-settings.xml
